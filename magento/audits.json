[
  {
    "id": "unused-css-rules",
    "title": "Defer unused CSS",
    "description": "Remove unused rules from stylesheets to reduce unnecessary bytes consumed by network activity. [Learn more](https://developers.google.com/web/tools/lighthouse/audits/unused-css).",
  },
  {
    "id": "uses-webp-images",
    "title": "Serve images in next-gen formats",
    "description": "Image formats like JPEG 2000, JPEG XR, and WebP often provide better compression than PNG or JPEG, which means faster downloads and less data consumption. [Learn more](https://developers.google.com/web/tools/lighthouse/audits/webp).",
  },
  {
    "id": "offscreen-images",
    "title": "Defer offscreen images",
    "description": "Consider lazy-loading offscreen and hidden images after all critical resources have finished loading to lower time to interactive. [Learn more](https://developers.google.com/web/tools/lighthouse/audits/offscreen-images).",
  },
  {
    "id": "total-byte-weight",
    "title": "Avoids enormous network payloads",
    "description": "Large network payloads cost users real money and are highly correlated with long load times. [Learn more](https://developers.google.com/web/tools/lighthouse/audits/network-payloads).",
  },
  {
    "id": "render-blocking-resources",
    "title": "Eliminate render-blocking resources",
    "description": "Resources are blocking the first paint of your page. Consider delivering critical JS/CSS inline and deferring all non-critical JS/styles. [Learn more](https://developers.google.com/web/tools/lighthouse/audits/blocking-resources).",
  },
  {
    "id": "unminified-css",
    "title": "Minify CSS",
    "description": "Minifying CSS files can reduce network payload sizes. [Learn more](https://developers.google.com/web/tools/lighthouse/audits/minify-css).",
  },
  {
    "id": "unminified-javascript",
    "title": "Minify JavaScript",
    "description": "Minifying JavaScript files can reduce payload sizes and script parse time. [Learn more](https://developers.google.com/speed/docs/insights/MinifyResources).",
  },
  {
    "id": "efficient-animated-content",
    "title": "Use video formats for animated content",
    "description": "Large GIFs are inefficient for delivering animated content. Consider using MPEG4/WebM videos for animations and PNG/WebP for static images instead of GIF to save network bytes. [Learn more](https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/replace-animated-gifs-with-video/)",
  },
  {
    "id": "unused-javascript",
    "title": "Remove unused JavaScript",
    "description": "Remove unused JavaScript to reduce bytes consumed by network activity.",
  },
  {
    "id": "uses-long-cache-ttl",
    "title": "Uses efficient cache policy on static assets",
    "description": "A long cache lifetime can speed up repeat visits to your page. [Learn more](https://developers.google.com/web/tools/lighthouse/audits/cache-policy).",
  },
  {
    "id": "uses-optimized-images",
    "title": "Efficiently encode images",
    "description": "Optimized images load faster and consume less cellular data. [Learn more](https://developers.google.com/web/tools/lighthouse/audits/optimize-images).",
  },
  {
    "id": "uses-text-compression",
    "title": "Enable text compression",
    "description": "Text-based resources should be served with compression (gzip, deflate or brotli) to minimize total network bytes. [Learn more](https://developers.google.com/web/tools/lighthouse/audits/text-compression).",
  },
  {
    "id": "uses-responsive-images",
    "title": "Properly size images",
    "description": "Serve images that are appropriately-sized to save cellular data and improve load time. [Learn more](https://developers.google.com/web/tools/lighthouse/audits/oversized-images).",
  },
  {
    "id": "redirects",
    "title": "Avoid multiple page redirects",
    "description": "Redirects introduce additional delays before the page can be loaded. [Learn more](https://developers.google.com/web/tools/lighthouse/audits/redirects)."
  },
  {
    "id": "time-to-first-byte",
    "title": "Server response times are low (TTFB)",
    "description": "Time To First Byte identifies the time at which your server sends a response. [Learn more](https://developers.google.com/web/tools/lighthouse/audits/ttfb).",
  },
  {
    "id": "user-timings",
    "title": "User Timing marks and measures",
    "description": "Consider instrumenting your app with the User Timing API to measure your app's real-world performance during key user experiences. [Learn more](https://developers.google.com/web/tools/lighthouse/audits/user-timing)."
  },
  {
    "id": "uses-rel-preconnect",
    "title": "Preconnect to required origins",
    "description": "Consider adding preconnect or dns-prefetch resource hints to establish early connections to important third-party origins. [Learn more](https://developers.google.com/web/fundamentals/performance/resource-prioritization#preconnect)."
  },
  {
    "id": "uses-rel-preload",
    "title": "Preload key requests",
    "description": "Consider using <link rel=preload> to prioritize fetching resources that are currently requested later in page load. [Learn more](https://developers.google.com/web/tools/lighthouse/audits/preload)."
  },
  {
    "id": "critical-request-chains",
    "title": "Minimize Critical Requests Depth",
    "description": "The Critical Request Chains below show you what resources are loaded with a high priority. Consider reducing the length of chains, reducing the download size of resources, or deferring the download of unnecessary resources to improve page load. [Learn more](https://developers.google.com/web/tools/lighthouse/audits/critical-request-chains)."
  }
]